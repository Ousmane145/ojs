name: CD - Déploiement vers Serveur OJS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de déploiement'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      ojs-version:
        description: 'Version OJS cible'
        required: true
        default: '3.4'
        type: choice
        options:
        - '3.5'
        - '3.4'

jobs:
  deploy:
    name: Déployer sur Serveur OJS
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Ajouter le serveur à known_hosts
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

    - name: Valider la connexion SSH
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "🔗 Test de connexion au serveur..."
        ssh -o BatchMode=yes $SERVER_USER@$SERVER_IP "echo 'Connexion SSH réussie!'"

    - name: Créer une archive du plugin
      run: |
        echo "📦 Création de l'archive..."
        cd plugins/generic/santaneAnalysisPlugin/
        tar -czf santane-analysis-plugin.tar.gz ./*
        ls -la santane-analysis-plugin.tar.gz

    - name: Déployer sur le serveur OJS
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "🚀 Déploiement en cours..."
        
        # Copier l'archive
        scp plugins/generic/santaneAnalysisPlugin/santane-analysis-plugin.tar.gz \
          $SERVER_USER@$SERVER_IP:/tmp/
        
        # Commande de déploiement distant
        ssh $SERVER_USER@$SERVER_IP << 'EOF'
          set -e
          echo "📁 Déploiement sur le serveur..."
          
          OJS_DIR="/var/www/html/ojs"
          PLUGIN_DIR="$OJS_DIR/plugins/generic/santaneAnalysisPlugin"
          BACKUP_DIR="/tmp/plugin-backups"
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)

          mkdir -p $BACKUP_DIR

          if [ -d "$PLUGIN_DIR" ]; then
            echo "💾 Sauvegarde de l'ancienne version..."
            tar -czf "$BACKUP_DIR/santane-analysis-backup-$TIMESTAMP.tar.gz" -C $PLUGIN_DIR .
          fi

          sudo mkdir -p $PLUGIN_DIR
          sudo chown $USER:www-data $PLUGIN_DIR
          sudo chmod 755 $PLUGIN_DIR

          echo "📂 Extraction de la nouvelle version..."
          tar -xzf /tmp/santane-analysis-plugin.tar.gz -C $PLUGIN_DIR

          sudo chown -R $USER:www-data $PLUGIN_DIR
          sudo find $PLUGIN_DIR -type d -exec chmod 755 {} \;
          sudo find $PLUGIN_DIR -type f -exec chmod 644 {} \;

          rm /tmp/santane-analysis-plugin.tar.gz
          echo "✅ Déploiement terminé avec succès!"
          echo "📋 Résumé:"
          echo "   - Backup: $BACKUP_DIR/santane-analysis-backup-$TIMESTAMP.tar.gz"
          echo "   - Nouvelle version déployée dans: $PLUGIN_DIR"
          echo "   - Nombre de fichiers: $(find $PLUGIN_DIR -type f | wc -l)"
        EOF

    - name: Vérifier le déploiement
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "🔍 Vérification du déploiement..."
        ssh $SERVER_USER@$SERVER_IP "
          PLUGIN_DIR=\"/var/www/html/ojs/plugins/generic/santaneAnalysisPlugin\"
          if [ -d \"\$PLUGIN_DIR\" ]; then
            echo '✅ Plugin déployé avec succès'
            echo '📁 Structure:'
            find \$PLUGIN_DIR -name '*.php' -o -name '*.js' -o -name '*.css' -o -name '*.xml' | head -10
            echo '📊 Taille:'
            du -sh \$PLUGIN_DIR
          else
            echo '❌ Erreur: Plugin non trouvé'
            exit 1
          fi
        "

    - name: Notifier le succès
      if: success()
      run: |
        echo "🎉 Déploiement réussi vers ${{ github.event.inputs.environment }}!"
        echo "Version: ${{ github.event.inputs['ojs-version'] || 'latest' }}"

    - name: Notifier l'échec
      if: failure()
      run: |
        echo "❌ Échec du déploiement!"
        exit 1